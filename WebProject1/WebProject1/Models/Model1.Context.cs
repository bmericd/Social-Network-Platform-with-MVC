//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebProject1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SocialNetworkEntities7 : DbContext
    {
        public SocialNetworkEntities7()
            : base("name=SocialNetworkEntities7")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Comment> Comment { get; set; }
        public virtual DbSet<Event> Event { get; set; }
        public virtual DbSet<Hobby> Hobby { get; set; }
        public virtual DbSet<Message> Message { get; set; }
        public virtual DbSet<Post> Post { get; set; }
        public virtual DbSet<PrivacySettings> PrivacySettings { get; set; }
        public virtual DbSet<Profession> Profession { get; set; }
        public virtual DbSet<ProfileDescription> ProfileDescription { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Relationship> Relationship { get; set; }
        public virtual DbSet<CheckTodaysBirthdays> CheckTodaysBirthdays { get; set; }
        public virtual DbSet<User_Information_Admin> User_Information_Admin { get; set; }
        public virtual DbSet<View_Events> View_Events { get; set; }
        public virtual DbSet<View_Following> View_Following { get; set; }
        public virtual DbSet<View_Hobby> View_Hobby { get; set; }
        public virtual DbSet<View_Messages> View_Messages { get; set; }
        public virtual DbSet<View_Posts> View_Posts { get; set; }
        public virtual DbSet<View_Professions> View_Professions { get; set; }
        public virtual DbSet<View_Relationships> View_Relationships { get; set; }
        public virtual DbSet<View_Settings> View_Settings { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int CreateEvent(Nullable<int> userID, string eventName, string eventDescription, Nullable<int> notify)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var eventDescriptionParameter = eventDescription != null ?
                new ObjectParameter("EventDescription", eventDescription) :
                new ObjectParameter("EventDescription", typeof(string));
    
            var notifyParameter = notify.HasValue ?
                new ObjectParameter("Notify", notify) :
                new ObjectParameter("Notify", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateEvent", userIDParameter, eventNameParameter, eventDescriptionParameter, notifyParameter);
        }
    
        public virtual int CreateOrDeleteUser(string firstName, string lastName, string email, string password, Nullable<bool> createOrDelete)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createOrDeleteParameter = createOrDelete.HasValue ?
                new ObjectParameter("CreateOrDelete", createOrDelete) :
                new ObjectParameter("CreateOrDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOrDeleteUser", firstNameParameter, lastNameParameter, emailParameter, passwordParameter, createOrDeleteParameter);
        }
    
        public virtual ObjectResult<GetFollowers_Result> GetFollowers(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFollowers_Result>("GetFollowers", userIDParameter);
        }
    
        public virtual ObjectResult<GetPostAndComment_Result> GetPostAndComment(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPostAndComment_Result>("GetPostAndComment", userIDParameter);
        }
    
        public virtual int GetShortName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetShortName");
        }
    
        public virtual ObjectResult<GetUserInfo_Result> GetUserInfo(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserInfo_Result>("GetUserInfo", userIDParameter);
        }
    
        public virtual ObjectResult<PrintSexAverage_Result> PrintSexAverage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintSexAverage_Result>("PrintSexAverage");
        }
    
        public virtual ObjectResult<SameProfession_Result> SameProfession(string professionName)
        {
            var professionNameParameter = professionName != null ?
                new ObjectParameter("ProfessionName", professionName) :
                new ObjectParameter("ProfessionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SameProfession_Result>("SameProfession", professionNameParameter);
        }
    
        public virtual ObjectResult<SendMessage_Result> SendMessage(Nullable<int> fromID, Nullable<int> toID, string message)
        {
            var fromIDParameter = fromID.HasValue ?
                new ObjectParameter("FromID", fromID) :
                new ObjectParameter("FromID", typeof(int));
    
            var toIDParameter = toID.HasValue ?
                new ObjectParameter("ToID", toID) :
                new ObjectParameter("ToID", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendMessage_Result>("SendMessage", fromIDParameter, toIDParameter, messageParameter);
        }
    
        public virtual int SetUserHobby(Nullable<int> userID, string hobby)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var hobbyParameter = hobby != null ?
                new ObjectParameter("Hobby", hobby) :
                new ObjectParameter("Hobby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetUserHobby", userIDParameter, hobbyParameter);
        }
    }
}
